using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace gameTest
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //15 20
            //
            //########## ##########
            //#   #             # #
            //# # # # ######### # #
            //# #   # #     #   # #
            //# ##### # ### ### # #
            //# #   ### # #   #   #
            //# # # ### # ### #####
            //#   #     #   #     #
            //# ######### # ##### #
            //# #         #     # #
            //# ### # # ######### #
            //#   # # # #   #   # #
            //### ### ##### # # # #
            //# #   #     #   # # #
            //# ### ##### ##### # #
            //#   # #   #     #   #
            //### # # # ### # #####
            //#   # # #     #   # #
            //# ### # ########### #
            //#       #           #
            //########## ##########
            //{ '#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#'},
            //{ '#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
            //{ '#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#'},
            //{ '#',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'},
            //{ '#',' ','#','#','#','#','#',' ','#',' ','#','#','#',' ','#','#','#',' ','#',' ','#'},
            //{ '#',' ','#',' ',' ',' ','#','#','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#'},
            //{ '#',' ','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#',' ','#','#','#','#','#'},
            //{ '#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},
            //{ '#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#',' ','#'},
            //{ '#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#'},
            //{ '#',' ','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#'},
            //{ '#',' ',' ',' ','#',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#'},
            //{ '#','#','#',' ','#','#','#',' ','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#'},
            //{ '#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#'},
            //{ '#',' ','#','#','#',' ','#','#','#','#','#',' ','#','#','#','#','#',' ','#',' ','#'},
            //{ '#',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
            //{ '#','#','#',' ','#',' ','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#','#','#'},
            //{ '#',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'},
            //{ '#',' ','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#'},
            //{ '#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
            //{ '#','#','#','#','#','#','#','#','#','#',' ','#','#','#','#','#','#','#','#','#','#'}

            Console.CursorVisible = false;
            char[,] mapLvl1 =
            {
                { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                { '#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','$','#'},
                { '#',' ','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#'},
                { '#',' ','#',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'},
                { '#',' ','#','#','#','#','#',' ','#',' ','#','#','#',' ','#','#','#',' ','#',' ','#'},
                { '#',' ','#',' ',' ',' ','#',' ','#',' ','#','$','#',' ',' ',' ','#',' ',' ',' ','#'},
                { '#',' ','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#',' ','#','#','#','#','#'},
                { '#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},
                { '#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#','#','#','#','#',' ','#'},
                { '#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#'},
                { '#',' ','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#'},
                { '#',' ',' ',' ','#',' ','#',' ','#',' ','#','$',' ',' ','#',' ',' ',' ','#',' ','#'},
                { '#','#','#',' ','#','#','#',' ','#','#','#','#','#',' ','#',' ','#',' ','#',' ','#'},
                { '#','$','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#'},
                { '#',' ','#','#','#',' ','#','#','#','#','#',' ','#','#','#','#','#',' ','#',' ','#'},
                { '#',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
                { '#','#','#',' ','#',' ','#',' ','#',' ','#','#','#',' ','#',' ','#','#','#','#','#'},
                { '#',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#','$','#'},
                { '#',' ','#','#','#',' ','#',' ','#','#','#','#','#','#','#','#','#',' ','#',' ','#'},
                { '#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}
            };

            //координаты персонажа
            int userX = 1; int userY = 10;

            //инвентарь
            char[] inventory = new char[1];

            while (true)
            {
                //отрисовка инвенторя
                Console.SetCursorPosition(0, 22);
                Console.WriteLine("+-Инвентарь-+");
                Console.SetCursorPosition(0, 23);
                for (int i = 0; i < inventory.Length; i++)
                {
                    Console.Write(" "+inventory[i]);
                }

                //отрисовка карты
                Console.SetCursorPosition(0, 0);
                for (int i = 0; i < mapLvl1.GetLength(0); i++)
                {
                    for (int j = 0; j < mapLvl1.GetLength(1); j++)
                    {
                        Console.Write(mapLvl1[i, j]);
                    }
                    Console.WriteLine();
                }

                //отрисовка персонажа
                Console.SetCursorPosition(userY, userX);
                Console.Write('@');

                //перемещение и проверка
                ConsoleKeyInfo button = Console.ReadKey();
                switch (button.Key)
                {
                    case ConsoleKey.W:
                        if (mapLvl1[userX - 1, userY] != '#')
                        {
                            userX--;
                        }
                        break;
                    case ConsoleKey.S:
                        if (mapLvl1[userX + 1, userY] != '#')
                        {
                            userX++;
                        }
                        break;
                    case ConsoleKey.A:
                        if (mapLvl1[userX, userY - 1] != '#')
                        {
                            userY--;
                        }
                        break;
                    case ConsoleKey.D:
                        if (mapLvl1[userX, userY + 1] != '#')
                        {
                            userY++;
                        }
                        break;
                }

                //отрисовка и заполнение инвенторя
                if (mapLvl1[userX, userY] == '$')
                {
                    //замена $ на 0
                    mapLvl1[userX, userY] = '0';
                    char[] tempInventory = new char[inventory.Length + 1];

                    for (int i = 0; i < inventory.Length; i++)
                    {
                        tempInventory[i] = inventory[i];
                    }
                    tempInventory[tempInventory.Length - 1] = '$';
                    inventory = tempInventory;
                }
                //очистка поля
                Console.Clear();
            }
        }
    }
}
